<?php

/**
 * @file
 * custom module for autocomplete search box.
 */

/**
 * Implements hook_block_info().
 */
function custom_search_block_info() {
  $blocks['search_block'] = array(
      'info' => t('Search Block'),
  );
  $blocks['custom_header_search_block'] = array(
      'info' => t('Custom header search block'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function custom_search_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'search_block':
      $block['content'] = search_block_data();
      break;
    case 'custom_header_search_block' :
      $block['subject'] = t('Custom header search block');
      $block['content'] = drupal_get_form('custom_header_search_form');
      break;
  }
  return $block;
}

/**
 *
 * @return string
 */
function search_block_data() {
  return "<input type='text' id='searchbox'  placeholder='search by expert or area of expertise' autocomplete='off'/><div id='matches' class='scrollbox'></div>";
}

/**
 * Page callback to display the search form.
 */
function custom_header_search_form($form, &$form_state) {
  // Build your form
  $options[0] = 'Site';
  $options[1] = 'Library';
  $options[2] = 'Database';
  $form['opt'] = array(
      '#type' => 'select',
      '#options' => $options,
      '#prefix' => '<div class="poll-form select-dropdown">',
      '#suffix' => '</div>',
  );
  $form['searchbox'] = array(
      '#type' => 'textfield',
      '#size' => 20,
      '#maxlength' => 20,
      '#prefix' => '<div class="poll-form search-field">',
      '#suffix' => '</div>',
  );
  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Submit',
      '#attributes' => array(
          'title' => t("Search"),
      ),
      '#prefix' => '<div class="poll-form search-btn">',
      '#suffix' => '</div>',
  );

  return $form;
}

/**
 * Form submission handler to search.
 */
function custom_header_search_form_submit($form, &$form_state) {

  $search = $form['opt']['#options'][$form_state['values']['opt']];
  $search_value = $form_state['values']['searchbox'];
  if ($form['opt']['#options'][$form_state['values']['opt']] == 'Site') {
    $alias = "http://www.americanancestors.org/search/site-search/?q=" . $search_value;
  } else if ($form['opt']['#options'][$form_state['values']['opt']] == 'Library') {
    $alias = "http://library.nehgs.org/search/a?searchtype=Y&searcharg=" . $search_value;
  } else if ($form['opt']['#options'][$form_state['values']['opt']] == 'Database') {
    $alias = "http://www.americanancestors.org/search/database-search/?keywords=" . $search_value;
  }



  $form_state['redirect'] = url($alias);



  drupal_set_message(t('The form has been submitted.'));
}

/**
 * Implements hook_menu()
 */
function custom_search_menu() {
  $items = array();

  $items['autocomplete-data'] = array(
      "title" => "",
      "type" => MENU_NORMAL_ITEM,
      "page callback" => "autocomplete_data",
      "access arguments" => array("access content"),
  );
  return $items;
}

function autocomplete_data($string = '') {
  if (!$string) {
    echo drupal_json_encode(array());
    exit();
  }

  // Current user has the right to do that?!
  if (!user_access('access content')) {
    drupal_access_denied();
    return;
  }

  //-------------------------------------------------------------------------------------------------------------


  $result_node = db_select('node', 'n')
          ->fields('n', array('nid', 'title'))
          //->condition('title', '%' . db_like($string) . '%', 'LIKE')
          ->condition('type', 'experts')
          ->execute();

  $result_taxo = db_select('taxonomy_term_data', 't')
          ->fields('t', array('tid', 'name'))
          //->condition('name', '%' . db_like($string) . '%', 'LIKE')
          ->execute();

  if (!empty($result_node)) {
    while ($obj = $result_node->fetchObject()) {
      $temp_arr_db = array();
      $alias = drupal_get_path_alias('node/' . $obj->nid);
      $temp_arr_db['link'] = $alias;
      $temp_arr_db['value'] = $obj->title;
      $matches_db[$obj->title] = $temp_arr_db;
    }
  }

  if (!empty($result_taxo)) {
    while ($obj = $result_taxo->fetchObject()) {
      $temp_arr_db = array();
      $alias = drupal_get_path_alias('taxonomy/term/' . $obj->tid);
      $temp_arr_db['link'] = $alias;
      $temp_arr_db['value'] = $obj->name;
      $matches_db[$obj->name] = $temp_arr_db;
    }
  }


  $input = preg_quote($string, '~'); // don't forget to quote input string!
  $result = preg_grep('~' . $input . '~' . "i", array_keys($matches_db));


  $temp_arr = array();
  $matches = array();
  foreach ($result as $val) {
    $temp_arr['link'] = $matches_db[$val]['link'];
    $temp_arr['value'] = $matches_db[$val]['value'];
    $matches[] = $temp_arr;
  }


// Serve the result as JSON
  echo drupal_json_encode($matches);
  exit();
}
